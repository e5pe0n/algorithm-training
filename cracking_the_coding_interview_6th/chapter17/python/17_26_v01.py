from typing import List, Dict
from collections import defaultdict, Counter


def calc_similarity(docs: Dict[int, List[int]]) -> Dict[int, float]:
    w2d = defaultdict(list)
    for doc_id, words in docs.items():
        for v in words:
            w2d[v].append(doc_id)
    cnt_intersection = Counter()
    for ids in w2d.values():
        for i in range(len(ids)):
            for j in range(i + 1, len(ids)):
                cnt_intersection[(ids[i], ids[j])] += 1
    similarities = {}
    for ids, n_intersection in cnt_intersection.most_common():
        n_union = len(docs[ids[0]]) + len(docs[ids[1]]) - n_intersection
        similarities[ids] = n_intersection / n_union
    return similarities


def ns(f):
    return next(f).strip()


def solve(fp: str):
    print(f"# {fp}")
    with open(fp) as f:
        n_docs = int(ns(f))
        docs = {}
        for _ in range(n_docs):
            doc_id, _ = map(int, ns(f).split())
            docs[doc_id] = list(map(int, ns(f).split()))
    res = calc_similarity(docs)
    for k, v in res.items():
        print(f"{k}: {v}")
    print()


solve("../testcases/17_26/01.txt")
solve("../testcases/17_26/02.txt")
solve("../testcases/17_26/03.txt")

# # ../testcases/17_26/01.txt
# (13, 16): 0.25
# (13, 19): 0.1
# (19, 24): 0.14285714285714285

# # ../testcases/17_26/02.txt
# (0, 9): 0.018518518518518517
# (5, 8): 0.01694915254237288
# (2, 3): 0.009009009009009009
# (3, 9): 0.006622516556291391
# (8, 9): 0.007352941176470588

# # ../testcases/17_26/03.txt
# (29, 39): 0.017857142857142856
# (38, 40): 0.014084507042253521
# (69, 93): 0.03225806451612903
# (0, 92): 0.007751937984496124
# (1, 40): 0.00909090909090909
# (2, 42): 0.009523809523809525
# (2, 3): 0.006172839506172839
# (2, 36): 0.008547008547008548
# (2, 91): 0.005988023952095809
# (2, 12): 0.006802721088435374
# (3, 13): 0.006578947368421052
# (3, 38): 0.007194244604316547
# (3, 88): 0.005952380952380952
# (5, 6): 0.010309278350515464
# (6, 79): 0.00625
# (6, 13): 0.007936507936507936
# (7, 98): 0.008064516129032258
# (7, 13): 0.00847457627118644
# (7, 33): 0.006622516556291391
# (9, 94): 0.007462686567164179
# (9, 20): 0.008064516129032258
# (12, 86): 0.006711409395973154
# (12, 52): 0.007751937984496124
# (13, 29): 0.011111111111111112
# (13, 78): 0.007575757575757576
# (14, 46): 0.010309278350515464
# (17, 51): 0.015384615384615385
# (20, 74): 0.008130081300813009
# (21, 97): 0.07692307692307693
# (22, 33): 0.007633587786259542
# (24, 90): 0.008264462809917356
# (24, 26): 0.01282051282051282
# (24, 32): 0.010638297872340425
# (25, 45): 0.015873015873015872
# (25, 34): 0.0070921985815602835
# (25, 94): 0.009900990099009901
# (25, 77): 0.008403361344537815
# (27, 40): 0.009174311926605505
# (27, 77): 0.011111111111111112
# (29, 47): 0.015151515151515152
# (29, 54): 0.010101010101010102
# (32, 78): 0.009708737864077669
# (32, 33): 0.007518796992481203
# (32, 88): 0.008620689655172414
# (33, 81): 0.008928571428571428
# (33, 78): 0.006060606060606061
# (33, 39): 0.005405405405405406
# (33, 83): 0.005494505494505495
# (34, 63): 0.008547008547008548
# (34, 99): 0.008
# (35, 46): 0.013888888888888888
# (35, 98): 0.012195121951219513
# (46, 98): 0.007633587786259542
# (37, 68): 0.006211180124223602
# (37, 67): 0.009615384615384616
# (37, 75): 0.006802721088435374
# (38, 83): 0.007352941176470588
# (38, 54): 0.008
# (39, 85): 0.006134969325153374
# (40, 48): 0.006172839506172839
# (41, 72): 0.010526315789473684
# (42, 92): 0.0078125
# (42, 62): 0.0196078431372549
# (42, 74): 0.009174311926605505
# (44, 70): 0.02631578947368421
# (44, 82): 0.022222222222222223
# (46, 88): 0.0070921985815602835
# (46, 57): 0.014084507042253521
# (47, 74): 0.008403361344537815
# (48, 98): 0.0070921985815602835
# (50, 58): 0.007194244604316547
# (50, 54): 0.007142857142857143
# (50, 91): 0.006289308176100629
# (51, 88): 0.007462686567164179
# (51, 52): 0.00909090909090909
# (51, 59): 0.006711409395973154
# (54, 91): 0.006024096385542169
# (57, 58): 0.012048192771084338
# (58, 79): 0.005847953216374269
# (58, 88): 0.006535947712418301
# (59, 72): 0.0056179775280898875
# (59, 83): 0.005555555555555556
# (59, 62): 0.008620689655172414
# (63, 80): 0.012195121951219513
# (66, 92): 0.008064516129032258
# (68, 88): 0.005988023952095809
# (70, 94): 0.0125
# (72, 92): 0.005555555555555556
# (74, 85): 0.006493506493506494
# (74, 90): 0.0070921985815602835
# (74, 91): 0.005847953216374269
# (74, 86): 0.0064516129032258064
# (74, 94): 0.007518796992481203
# (75, 79): 0.005847953216374269
# (78, 99): 0.01020408163265306
# (79, 90): 0.006211180124223602
# (84, 98): 0.008695652173913044
# (85, 92): 0.005780346820809248
# (85, 99): 0.009433962264150943
# (85, 94): 0.007692307692307693
# (88, 99): 0.009009009009009009
# (90, 98): 0.007518796992481203
# (91, 98): 0.006134969325153374
